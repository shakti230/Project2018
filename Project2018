#Mary McDonagh, 20-03-2018
#Written in Anaconda navigator jupyter
#References
#http://airccse.org/journal/ijsc/papers/2112ijsc07.pdf
#https://www.idosi.org/wasj/wasj29(dmsct)14/5.pdf
#http://www.ijrdet.com/files/Volume3Issue2/IJRDET_0814_13.pdf
#http://www.cs.odu.edu/~ccartled/Teaching/2017-Fall/DataAnalysis/Presentations/030-iris-dataset.pdf
#http://patrickhoey.com/downloads/Computer_Science/03_Patrick_Hoey_Data_Visualization_Dataset_paper.pdf
#http://www.statlab.uni-heidelberg.de/data/iris/
#https://en.wikipedia.org/wiki/Ronald_Fisher
#https://www.packtpub.com/mapt/book/big_data_and_business_intelligence/9781782161400/2/ch02lvl1sec14/the-iris-dataset
#https://www.idosi.org/wasj/wasj29(dmsct)14/5.pdf
#http://www.ijrdet.com/files/Volume3Issue2/IJRDET_0814_13.pdf
#https://pdfs.semanticscholar.org/b58f/395fd0afa3e309ff108247e03ab6c3f15719.pdf
#http://sci2s.ugr.es/keel/pdf/algorithm/articulo/CORE.pdf
#https://machinelearningmastery.com/machine-learning-in-python-step-by-step/
#www.kaggle.com
#https://www.kaggle.com/xgwong0815/python-data-visualizations-on-iris?scriptVersionId=418035


#import all required libraries
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
from pandas.plotting import scatter_matrix

#Analysis 1
#Use the absolute link to irisdata csv file to view data
iris_dataset = pd.read_csv('C:/Users/sam2/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Anaconda3 (64-bit)/iris_data.csv', header=None, sep=',')
iris_dataset

#Analysis 2
#Assigning column names to iris data using the variable class
iris_dataset.columns=['sepal-length', 'sepal-width', 'petal-length', 'petal-width', 'class']
iris_dataset.head()

#Analysis 3
#Outlining the number of rows and columns in the iris data set
iris_dataset.shape

#Analysis 4
#Describe the dataset e.g. list mean, count, min, max and percetages
iris_dataset.describe()

#Analysis 5
#iris_dataset group by class size to define the number of rows in each class
iris_dataset.groupby('class').size()

#Analysis 6
#Describe each class individually (mean, count, min, max etc) 
iris_dataset[iris_dataset['class']=='Iris-setosa'].describe()
iris_dataset[iris_dataset['class']=='Iris-versicolor'].describe()
iris_dataset[iris_dataset['class']=='Iris-virginica'].describe()

#Analysis 7
#Use a box plot to display the iris data set sepal/petal width and length
iris_dataset.plot(kind = 'box', subplots = True, layout = (2, 2), sharey = False)
plt.show()

#Analysis 8
#Display the relationship between the two attributes (sepal) for each class using a scatter plot graph

sns.set_style('whitegrid')
sns.FacetGrid(iris_dataset, hue = 'class', size = 6)\
.map(plt.scatter, 'sepal-length', 'sepal-width')\
.add_legend()
plt.show()
 
#Display the relationship between the two attributes (petal) for each class
sns.set_style('whitegrid')
sns.FacetGrid(iris_dataset, hue = 'class', size = 6)\.map(plt.scatter, 'petal-length', 'petal-width')\.add_legend()plt.show()

#Analysis 9
#Display a correlation matrix to analyse the correlation between each attribute and teh dependency on each other
plt.figure(figsize=(7,5)) 
sns.heatmap(iris_dataset.corr(),annot=True,cmap='RdYlGn_r') #define colours in matrix
plt.show()

#Analysis 10 
#Display a scatter matrix to comprehensively analyse all data
from pandas.plotting import scatter_matrix
scatter_matrix(iris_dataset)
plt.show()
 
#Analysis 11
#Display a histogram to analyse petal lenth and width as seen in previous scatter plot
#Histograms
iris_dataset.hist()
plt.show()

#Analysis 12
#Display data in a pie chart
labels = ['Setosa', 'Versicolor', 'Virginica']
sizes = [50,50,50]
plt.pie(sizes,labels=labels,explode= (0.1, 0.1, 0.1))
plt.axis('equal') # to show equal axis
plt.show
